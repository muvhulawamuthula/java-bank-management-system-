<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.328" tests="13" errors="0" skipped="0" failures="11">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp/target/test-classes:/Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp/target/classes:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.5.4/spring-boot-starter-actuator-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter/3.5.4/spring-boot-starter-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.5.4/spring-boot-starter-logging-3.5.4.jar:/Users/asanda/.m2/repository/ch/qos/logback/logback-classic/1.5.18/logback-classic-1.5.18.jar:/Users/asanda/.m2/repository/ch/qos/logback/logback-core/1.5.18/logback-core-1.5.18.jar:/Users/asanda/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/asanda/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/asanda/.m2/repository/org/slf4j/jul-to-slf4j/2.0.17/jul-to-slf4j-2.0.17.jar:/Users/asanda/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/asanda/.m2/repository/org/yaml/snakeyaml/2.4/snakeyaml-2.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.5.4/spring-boot-actuator-autoconfigure-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-actuator/3.5.4/spring-boot-actuator-3.5.4.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.19.2/jackson-databind-2.19.2.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.19.2/jackson-annotations-2.19.2.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.19.2/jackson-core-2.19.2.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.19.2/jackson-datatype-jsr310-2.19.2.jar:/Users/asanda/.m2/repository/io/micrometer/micrometer-observation/1.15.2/micrometer-observation-1.15.2.jar:/Users/asanda/.m2/repository/io/micrometer/micrometer-commons/1.15.2/micrometer-commons-1.15.2.jar:/Users/asanda/.m2/repository/io/micrometer/micrometer-jakarta9/1.15.2/micrometer-jakarta9-1.15.2.jar:/Users/asanda/.m2/repository/io/micrometer/micrometer-core/1.15.2/micrometer-core-1.15.2.jar:/Users/asanda/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/asanda/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.5.4/spring-boot-starter-data-jpa-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.5.4/spring-boot-starter-jdbc-3.5.4.jar:/Users/asanda/.m2/repository/com/zaxxer/HikariCP/6.3.1/HikariCP-6.3.1.jar:/Users/asanda/.m2/repository/org/springframework/spring-jdbc/6.2.9/spring-jdbc-6.2.9.jar:/Users/asanda/.m2/repository/org/hibernate/orm/hibernate-core/6.6.22.Final/hibernate-core-6.6.22.Final.jar:/Users/asanda/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/asanda/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/asanda/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/asanda/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/asanda/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/asanda/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/asanda/.m2/repository/net/bytebuddy/byte-buddy/1.17.6/byte-buddy-1.17.6.jar:/Users/asanda/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/asanda/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/asanda/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/asanda/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/asanda/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/asanda/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/asanda/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/asanda/.m2/repository/org/springframework/data/spring-data-jpa/3.5.2/spring-data-jpa-3.5.2.jar:/Users/asanda/.m2/repository/org/springframework/data/spring-data-commons/3.5.2/spring-data-commons-3.5.2.jar:/Users/asanda/.m2/repository/org/springframework/spring-orm/6.2.9/spring-orm-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-context/6.2.9/spring-context-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-aop/6.2.9/spring-aop-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-tx/6.2.9/spring-tx-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-beans/6.2.9/spring-beans-6.2.9.jar:/Users/asanda/.m2/repository/org/slf4j/slf4j-api/2.0.17/slf4j-api-2.0.17.jar:/Users/asanda/.m2/repository/org/springframework/spring-aspects/6.2.9/spring-aspects-6.2.9.jar:/Users/asanda/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.5.4/spring-boot-starter-validation-3.5.4.jar:/Users/asanda/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.43/tomcat-embed-el-10.1.43.jar:/Users/asanda/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/asanda/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.5.4/spring-boot-starter-web-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.5.4/spring-boot-starter-json-3.5.4.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.19.2/jackson-datatype-jdk8-2.19.2.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.19.2/jackson-module-parameter-names-2.19.2.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.5.4/spring-boot-starter-tomcat-3.5.4.jar:/Users/asanda/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.43/tomcat-embed-core-10.1.43.jar:/Users/asanda/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.43/tomcat-embed-websocket-10.1.43.jar:/Users/asanda/.m2/repository/org/springframework/spring-web/6.2.9/spring-web-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-webmvc/6.2.9/spring-webmvc-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-expression/6.2.9/spring-expression-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-devtools/3.5.4/spring-boot-devtools-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot/3.5.4/spring-boot-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.5.4/spring-boot-autoconfigure-3.5.4.jar:/Users/asanda/.m2/repository/com/mysql/mysql-connector-j/9.3.0/mysql-connector-j-9.3.0.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.5.4/spring-boot-starter-test-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-test/3.5.4/spring-boot-test-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.5.4/spring-boot-test-autoconfigure-3.5.4.jar:/Users/asanda/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/asanda/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/asanda/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/asanda/.m2/repository/net/minidev/json-smart/2.5.2/json-smart-2.5.2.jar:/Users/asanda/.m2/repository/net/minidev/accessors-smart/2.5.2/accessors-smart-2.5.2.jar:/Users/asanda/.m2/repository/org/ow2/asm/asm/9.7.1/asm-9.7.1.jar:/Users/asanda/.m2/repository/org/assertj/assertj-core/3.27.3/assertj-core-3.27.3.jar:/Users/asanda/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/asanda/.m2/repository/org/hamcrest/hamcrest/3.0/hamcrest-3.0.jar:/Users/asanda/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.2/junit-jupiter-5.12.2.jar:/Users/asanda/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.2/junit-jupiter-api-5.12.2.jar:/Users/asanda/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/asanda/.m2/repository/org/junit/platform/junit-platform-commons/1.12.2/junit-platform-commons-1.12.2.jar:/Users/asanda/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/asanda/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.2/junit-jupiter-params-5.12.2.jar:/Users/asanda/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.2/junit-jupiter-engine-5.12.2.jar:/Users/asanda/.m2/repository/org/junit/platform/junit-platform-engine/1.12.2/junit-platform-engine-1.12.2.jar:/Users/asanda/.m2/repository/org/mockito/mockito-core/5.17.0/mockito-core-5.17.0.jar:/Users/asanda/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.6/byte-buddy-agent-1.17.6.jar:/Users/asanda/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/asanda/.m2/repository/org/mockito/mockito-junit-jupiter/5.17.0/mockito-junit-jupiter-5.17.0.jar:/Users/asanda/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/asanda/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/asanda/.m2/repository/org/springframework/spring-core/6.2.9/spring-core-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-jcl/6.2.9/spring-jcl-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-test/6.2.9/spring-test-6.2.9.jar:/Users/asanda/.m2/repository/org/xmlunit/xmlunit-core/2.10.3/xmlunit-core-2.10.3.jar:/Users/asanda/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Africa/Johannesburg"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="APPLICATION_NAME" value="bankingapp"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="ZA"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp/target/surefire/surefirebooter-20250802183551875_3.jar /Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp/target/surefire 2025-08-02T18-35-51_811-jvmRun1 surefire-20250802183551875_1tmp surefire_0-20250802183551875_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp/target/test-classes:/Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp/target/classes:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.5.4/spring-boot-starter-actuator-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter/3.5.4/spring-boot-starter-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.5.4/spring-boot-starter-logging-3.5.4.jar:/Users/asanda/.m2/repository/ch/qos/logback/logback-classic/1.5.18/logback-classic-1.5.18.jar:/Users/asanda/.m2/repository/ch/qos/logback/logback-core/1.5.18/logback-core-1.5.18.jar:/Users/asanda/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/asanda/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/asanda/.m2/repository/org/slf4j/jul-to-slf4j/2.0.17/jul-to-slf4j-2.0.17.jar:/Users/asanda/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/asanda/.m2/repository/org/yaml/snakeyaml/2.4/snakeyaml-2.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.5.4/spring-boot-actuator-autoconfigure-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-actuator/3.5.4/spring-boot-actuator-3.5.4.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.19.2/jackson-databind-2.19.2.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.19.2/jackson-annotations-2.19.2.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.19.2/jackson-core-2.19.2.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.19.2/jackson-datatype-jsr310-2.19.2.jar:/Users/asanda/.m2/repository/io/micrometer/micrometer-observation/1.15.2/micrometer-observation-1.15.2.jar:/Users/asanda/.m2/repository/io/micrometer/micrometer-commons/1.15.2/micrometer-commons-1.15.2.jar:/Users/asanda/.m2/repository/io/micrometer/micrometer-jakarta9/1.15.2/micrometer-jakarta9-1.15.2.jar:/Users/asanda/.m2/repository/io/micrometer/micrometer-core/1.15.2/micrometer-core-1.15.2.jar:/Users/asanda/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/asanda/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.5.4/spring-boot-starter-data-jpa-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.5.4/spring-boot-starter-jdbc-3.5.4.jar:/Users/asanda/.m2/repository/com/zaxxer/HikariCP/6.3.1/HikariCP-6.3.1.jar:/Users/asanda/.m2/repository/org/springframework/spring-jdbc/6.2.9/spring-jdbc-6.2.9.jar:/Users/asanda/.m2/repository/org/hibernate/orm/hibernate-core/6.6.22.Final/hibernate-core-6.6.22.Final.jar:/Users/asanda/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/asanda/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/asanda/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/asanda/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/asanda/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/asanda/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/asanda/.m2/repository/net/bytebuddy/byte-buddy/1.17.6/byte-buddy-1.17.6.jar:/Users/asanda/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/asanda/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/asanda/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/asanda/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/asanda/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/asanda/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/asanda/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/asanda/.m2/repository/org/springframework/data/spring-data-jpa/3.5.2/spring-data-jpa-3.5.2.jar:/Users/asanda/.m2/repository/org/springframework/data/spring-data-commons/3.5.2/spring-data-commons-3.5.2.jar:/Users/asanda/.m2/repository/org/springframework/spring-orm/6.2.9/spring-orm-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-context/6.2.9/spring-context-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-aop/6.2.9/spring-aop-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-tx/6.2.9/spring-tx-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-beans/6.2.9/spring-beans-6.2.9.jar:/Users/asanda/.m2/repository/org/slf4j/slf4j-api/2.0.17/slf4j-api-2.0.17.jar:/Users/asanda/.m2/repository/org/springframework/spring-aspects/6.2.9/spring-aspects-6.2.9.jar:/Users/asanda/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.5.4/spring-boot-starter-validation-3.5.4.jar:/Users/asanda/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.43/tomcat-embed-el-10.1.43.jar:/Users/asanda/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/asanda/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.5.4/spring-boot-starter-web-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.5.4/spring-boot-starter-json-3.5.4.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.19.2/jackson-datatype-jdk8-2.19.2.jar:/Users/asanda/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.19.2/jackson-module-parameter-names-2.19.2.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.5.4/spring-boot-starter-tomcat-3.5.4.jar:/Users/asanda/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.43/tomcat-embed-core-10.1.43.jar:/Users/asanda/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.43/tomcat-embed-websocket-10.1.43.jar:/Users/asanda/.m2/repository/org/springframework/spring-web/6.2.9/spring-web-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-webmvc/6.2.9/spring-webmvc-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-expression/6.2.9/spring-expression-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-devtools/3.5.4/spring-boot-devtools-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot/3.5.4/spring-boot-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.5.4/spring-boot-autoconfigure-3.5.4.jar:/Users/asanda/.m2/repository/com/mysql/mysql-connector-j/9.3.0/mysql-connector-j-9.3.0.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.5.4/spring-boot-starter-test-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-test/3.5.4/spring-boot-test-3.5.4.jar:/Users/asanda/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.5.4/spring-boot-test-autoconfigure-3.5.4.jar:/Users/asanda/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/asanda/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/asanda/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/asanda/.m2/repository/net/minidev/json-smart/2.5.2/json-smart-2.5.2.jar:/Users/asanda/.m2/repository/net/minidev/accessors-smart/2.5.2/accessors-smart-2.5.2.jar:/Users/asanda/.m2/repository/org/ow2/asm/asm/9.7.1/asm-9.7.1.jar:/Users/asanda/.m2/repository/org/assertj/assertj-core/3.27.3/assertj-core-3.27.3.jar:/Users/asanda/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/asanda/.m2/repository/org/hamcrest/hamcrest/3.0/hamcrest-3.0.jar:/Users/asanda/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.2/junit-jupiter-5.12.2.jar:/Users/asanda/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.2/junit-jupiter-api-5.12.2.jar:/Users/asanda/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/asanda/.m2/repository/org/junit/platform/junit-platform-commons/1.12.2/junit-platform-commons-1.12.2.jar:/Users/asanda/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/asanda/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.2/junit-jupiter-params-5.12.2.jar:/Users/asanda/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.2/junit-jupiter-engine-5.12.2.jar:/Users/asanda/.m2/repository/org/junit/platform/junit-platform-engine/1.12.2/junit-platform-engine-1.12.2.jar:/Users/asanda/.m2/repository/org/mockito/mockito-core/5.17.0/mockito-core-5.17.0.jar:/Users/asanda/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.6/byte-buddy-agent-1.17.6.jar:/Users/asanda/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/asanda/.m2/repository/org/mockito/mockito-junit-jupiter/5.17.0/mockito-junit-jupiter-5.17.0.jar:/Users/asanda/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/asanda/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/asanda/.m2/repository/org/springframework/spring-core/6.2.9/spring-core-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-jcl/6.2.9/spring-jcl-6.2.9.jar:/Users/asanda/.m2/repository/org/springframework/spring-test/6.2.9/spring-test-6.2.9.jar:/Users/asanda/.m2/repository/org/xmlunit/xmlunit-core/2.10.3/xmlunit-core-2.10.3.jar:/Users/asanda/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/asanda"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp/target/surefire/surefirebooter-20250802183551875_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="21.0.8+12-LTS-250"/>
    <property name="user.name" value="asanda"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="13.4"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/asanda/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/kf/pgfnhlbn4_d9k0__27cl6vb40000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="21.0.8"/>
    <property name="user.dir" value="/Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="1614"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/asanda/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="21.0.8+12-LTS-250"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[bankingapp] "/>
  </properties>
  <testcase name="testRegisterWithServerError" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.012">
    <failure message="Status expected:&lt;500&gt; but was:&lt;400&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<500> but was:<400>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:640)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testRegisterWithServerError(ControllerErrorHandlingTest.java:85)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[2025-08-02T18:35:58.644+02:00  INFO 1614 --- [bankingapp] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest]: ControllerErrorHandlingTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-02T18:35:58.653+02:00  INFO 1614 --- [bankingapp] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.bankafrica.bankingapp.BankingappApplication for test class com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest
2025-08-02T18:35:58.656+02:00  INFO 1614 --- [bankingapp] [           main] o.s.b.d.r.RestartApplicationListener     : Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.4)

2025-08-02T18:35:58.677+02:00  INFO 1614 --- [bankingapp] [           main] c.b.b.c.ControllerErrorHandlingTest      : Starting ControllerErrorHandlingTest using Java 21.0.8 with PID 1614 (started by asanda in /Users/asanda/Desktop/java/Bank_Management_system-main-2/bankapp)
2025-08-02T18:35:58.677+02:00  INFO 1614 --- [bankingapp] [           main] c.b.b.c.ControllerErrorHandlingTest      : The following 1 profile is active: "test"
2025-08-02T18:35:58.805+02:00  INFO 1614 --- [bankingapp] [           main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
2025-08-02T18:35:58.844+02:00  INFO 1614 --- [bankingapp] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-02T18:35:58.844+02:00  INFO 1614 --- [bankingapp] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-02T18:35:58.845+02:00  INFO 1614 --- [bankingapp] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-08-02T18:35:58.851+02:00  INFO 1614 --- [bankingapp] [           main] c.b.b.c.ControllerErrorHandlingTest      : Started ControllerErrorHandlingTest in 0.195 seconds (process running for 6.917)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/auth/register
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"170"]
             Body = {"firstName":"John","lastName":"Doe","password":"password123","phoneNumber":"0712345678","initialDeposit":500.0,"idNumber":"9001015000000","email":"john.doe@example.com"}
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.AuthController
           Method = com.bankafrica.bankingapp.controller.AuthController#register(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"text/plain;charset=UTF-8", Content-Length:"23"]
     Content type = text/plain;charset=UTF-8
             Body = Unexpected server error
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testRegisterWithMissingFields" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.008">
    <failure message="Response content&#10;Expected: a string containing &quot;Required fields missing&quot;&#10;     but: was &quot;Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;java.util.Map.get(Object)&quot; is null&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Required fields missing"
     but: was "Cannot invoke "Object.toString()" because the return value of "java.util.Map.get(Object)" is null"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testRegisterWithMissingFields(ControllerErrorHandlingTest.java:60)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/auth/register
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"20"]
             Body = {"firstName":"John"}
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.AuthController
           Method = com.bankafrica.bankingapp.controller.AuthController#register(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"text/plain;charset=UTF-8", Content-Length:"97"]
     Content type = text/plain;charset=UTF-8
             Body = Cannot invoke "Object.toString()" because the return value of "java.util.Map.get(Object)" is null
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testGetProfileWithInvalidIdPathVariable" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.013">
    <failure message="Response content&#10;Expected: a string containing &quot;Invalid user ID format&quot;&#10;     but: was &quot;&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Invalid user ID format"
     but: was ""
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testGetProfileWithInvalidIdPathVariable(ControllerErrorHandlingTest.java:188)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[2025-08-02T18:35:58.885+02:00  WARN 1614 --- [bankingapp] [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'userId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "invalid-id"]

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/auth/profile/invalid-id
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.AuthController
           Method = com.bankafrica.bankingapp.controller.AuthController#getUserProfile(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.method.annotation.MethodArgumentTypeMismatchException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testInvalidJson" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.006">
    <failure message="Response content&#10;Expected: a string containing &quot;Invalid JSON format&quot;&#10;     but: was &quot;&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Invalid JSON format"
     but: was ""
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testInvalidJson(ControllerErrorHandlingTest.java:222)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[2025-08-02T18:35:58.893+02:00  WARN 1614 --- [bankingapp] [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected end-of-input within/between Object entries]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/auth/register
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"19"]
             Body = {"invalid": "json",
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.AuthController
           Method = com.bankafrica.bankingapp.controller.AuthController#register(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.http.converter.HttpMessageNotReadableException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testGetAccountWithInvalidIdPathVariable" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.007">
    <failure message="Response content&#10;Expected: a string containing &quot;Invalid account ID format&quot;&#10;     but: was &quot;&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Invalid account ID format"
     but: was ""
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testGetAccountWithInvalidIdPathVariable(ControllerErrorHandlingTest.java:179)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[2025-08-02T18:35:58.901+02:00  WARN 1614 --- [bankingapp] [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'accountId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "invalid-id"]

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/accounts/invalid-id
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.BankingController
           Method = com.bankafrica.bankingapp.controller.BankingController#getAccount(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.method.annotation.MethodArgumentTypeMismatchException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testDepositWithInvalidAmountFormat" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.006">
    <failure message="Response content&#10;Expected: a string containing &quot;Invalid amount format&quot;&#10;     but: was &quot;{&quot;error&quot;:&quot;Deposit failed: Character i is neither a decimal digit number, decimal point, nor \&quot;e\&quot; notation exponential mark.&quot;}&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Invalid amount format"
     but: was "{"error":"Deposit failed: Character i is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark."}"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testDepositWithInvalidAmountFormat(ControllerErrorHandlingTest.java:134)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/deposit
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"41"]
             Body = {"accountId":1,"amount":"invalid-amount"}
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.BankingController
           Method = com.bankafrica.bankingapp.controller.BankingController#deposit(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json"]
     Content type = application/json
             Body = {"error":"Deposit failed: Character i is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testUnsupportedMediaType" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.007">
    <system-out><![CDATA[2025-08-02T18:35:58.918+02:00  WARN 1614 --- [bankingapp] [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'text/plain;charset=UTF-8' is not supported]
]]></system-out>
  </testcase>
  <testcase name="testCreateAccountWithMissingFields" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.006">
    <failure message="Response content&#10;Expected: a string containing &quot;Account holder name is required&quot;&#10;     but: was &quot;{&quot;error&quot;:&quot;Account creation failed: Cannot invoke \&quot;Object.toString()\&quot; because the return value of \&quot;java.util.Map.get(Object)\&quot; is null&quot;}&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Account holder name is required"
     but: was "{"error":"Account creation failed: Cannot invoke \"Object.toString()\" because the return value of \"java.util.Map.get(Object)\" is null"}"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testCreateAccountWithMissingFields(ControllerErrorHandlingTest.java:203)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/accounts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"2"]
             Body = {}
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.BankingController
           Method = com.bankafrica.bankingapp.controller.BankingController#createAccount(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json"]
     Content type = application/json
             Body = {"error":"Account creation failed: Cannot invoke \"Object.toString()\" because the return value of \"java.util.Map.get(Object)\" is null"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testUnsupportedHttpMethod" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.008">
    <system-out><![CDATA[2025-08-02T18:35:58.934+02:00  WARN 1614 --- [bankingapp] [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
]]></system-out>
  </testcase>
  <testcase name="testDepositWithInvalidAccountIdFormat" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.006">
    <failure message="Response content&#10;Expected: a string containing &quot;Invalid account ID format&quot;&#10;     but: was &quot;{&quot;error&quot;:&quot;Deposit failed: For input string: \&quot;invalid-id\&quot;&quot;}&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Invalid account ID format"
     but: was "{"error":"Deposit failed: For input string: \"invalid-id\""}"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testDepositWithInvalidAccountIdFormat(ControllerErrorHandlingTest.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/deposit
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"41"]
             Body = {"accountId":"invalid-id","amount":500.0}
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.BankingController
           Method = com.bankafrica.bankingapp.controller.BankingController#deposit(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json"]
     Content type = application/json
             Body = {"error":"Deposit failed: For input string: \"invalid-id\""}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testWithdrawWithServerError" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.007">
    <failure message="Status expected:&lt;500&gt; but was:&lt;400&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<500> but was:<400>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:640)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testWithdrawWithServerError(ControllerErrorHandlingTest.java:169)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/withdraw
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"30"]
             Body = {"accountId":1,"amount":300.0}
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.BankingController
           Method = com.bankafrica.bankingapp.controller.BankingController#withdraw(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json"]
     Content type = application/json
             Body = {"error":"Withdrawal failed: Database connection error"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testLoginWithMissingFields" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.006">
    <failure message="Response content&#10;Expected: a string containing &quot;Email and password are required&quot;&#10;     but: was &quot;Cannot invoke &quot;com.bankafrica.bankingapp.model.User.getId()&quot; because &quot;user&quot; is null&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Email and password are required"
     but: was "Cannot invoke "com.bankafrica.bankingapp.model.User.getId()" because "user" is null"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testLoginWithMissingFields(ControllerErrorHandlingTest.java:102)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/auth/login
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"32"]
             Body = {"email":"john.doe@example.com"}
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.AuthController
           Method = com.bankafrica.bankingapp.controller.AuthController#login(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"text/plain;charset=UTF-8", Content-Length:"83"]
     Content type = text/plain;charset=UTF-8
             Body = Cannot invoke "com.bankafrica.bankingapp.model.User.getId()" because "user" is null
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testWithdrawWithMissingFields" classname="com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest" time="0.006">
    <failure message="Response content&#10;Expected: a string containing &quot;Account ID and amount are required&quot;&#10;     but: was &quot;{&quot;error&quot;:&quot;Withdrawal failed: Cannot invoke \&quot;Object.toString()\&quot; because the return value of \&quot;java.util.Map.get(Object)\&quot; is null&quot;}&quot;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Response content
Expected: a string containing "Account ID and amount are required"
     but: was "{"error":"Withdrawal failed: Cannot invoke \"Object.toString()\" because the return value of \"java.util.Map.get(Object)\" is null"}"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.web.servlet.result.ContentResultMatchers.lambda$string$3(ContentResultMatchers.java:141)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.bankafrica.bankingapp.controller.ControllerErrorHandlingTest.testWithdrawWithMissingFields(ControllerErrorHandlingTest.java:150)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/withdraw
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"15"]
             Body = {"accountId":1}
    Session Attrs = {}

Handler:
             Type = com.bankafrica.bankingapp.controller.BankingController
           Method = com.bankafrica.bankingapp.controller.BankingController#withdraw(Map)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json"]
     Content type = application/json
             Body = {"error":"Withdrawal failed: Cannot invoke \"Object.toString()\" because the return value of \"java.util.Map.get(Object)\" is null"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
</testsuite>